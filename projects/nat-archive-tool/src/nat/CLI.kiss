(defun :Void main []
    (let [[archiveDir] (Sys.args)
            controller
                (new ArchiveController
                    (new Archive archiveDir)
                    (new CLI))]
        (controller.runCommand (object args [(object name "str" type (Text 3 55)) (object name "int" type (Number 0 5 1))] handler (lambda [fuck shit] ~"string $fuck number $shit")))))

(defnew [])

(defmethod :Void enterText [prompt resolve &opt minLength maxLength]
    (Sys.print "$prompt ")
    (loop
        (let [entered (.toString (.readLine (Sys.stdin)))]
            (if !(<= minLength entered.length maxLength)
                    (Sys.print "Try again? ")
                {(resolve entered)
                    (break)}))))

(defmethod :Void enterNumber [prompt resolve &opt min max inStepsOf]
    (Sys.print "$prompt ")
    (loop
        (let [entered (Std.parseFloat (.toString (.readLine (Sys.stdin))))]
            (if
                (or
                        !(<= min entered max)
                        (and inStepsOf !(= 0 (% (- entered min) inStepsOf))))
                    (Sys.print "Try again? ")
                {(resolve entered)
                    (break)}))))

(defmethod :Void chooseEntry [prompt archive resolve]
    (resolve null))

(defmethod :Void chooseEntries [prompt archive resolve &opt min max]
    (resolve []))

(defmethod handleChanges [changeSet])

(defmethod :Void reportError [error] ~error)