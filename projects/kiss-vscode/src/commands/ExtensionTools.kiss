(loadFrom "kiss-vscode-api" "src/Util.kiss")

(function extensionPath [] .fsPath .uri (first Vscode.workspace.workspaceFolders))
(function :ChildProcessSpawnSyncOptions options [] (object cwd (extensionPath)))

(function handleUpdateFailure [error]
    (showCompileError "Error updating Kiss-VSCode: $error")
    (object)
    **(throw error))

(defMacro forceUpdateFailure [error]
    `{
        (statusBarItem.hide)
        (statusBarItem.dispose)
        (handleUpdateFailure ,error)
        (return)
    })

(var &mut :StatusBarItem statusBarItem null)
(defCommand context updateExtension "Update and reinstall the Kiss-Vscode extension you are editing" "C-; C-u" []
    (set statusBarItem (Vscode.window.createStatusBarItem))
    (set statusBarItem.text "\$(loading~spin) Compiling extension")
    (statusBarItem.show)
    (if (= "Windows" (Sys.systemName))
            (trySpawnSync "cmd.exe" ["/c" "npm" "install"] (options) forceUpdateFailure)
        (trySpawnSync "npm" ["install"] (options) forceUpdateFailure))
    (trySpawnSync "haxe" ["build.hxml"] (options) forceUpdateFailure)
    (awaitLet [_ (executeCommand 
                        "workbench.extensions.command.installFromVSIX"
                        (Uri.file (joinPath (extensionPath) (last (filter (FileSystem.readDirectory (extensionPath)) ->file (file.endsWith ".vsix"))))))]

            (catch [error]
                (statusBarItem.hide)
                (statusBarItem.dispose)
                (handleUpdateFailure error))
                
            (statusBarItem.hide)
            (statusBarItem.dispose))
        
        {}
    null)

(defCommand context testAndUpdateExtension "Check test.sh, then update and reinstall the kiss-vscode extension you are editing" "" []
    (trySpawnSync "test.sh" [] (options) handleUpdateFailure)
    (updateExtension))