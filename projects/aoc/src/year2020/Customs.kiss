(defun countAnyYes [:Array<String> group]
    (countWhereYes group (lambda [c] (< 0 c))))

(defun countAllYes [:Array<String> group]
    (countWhereYes group (lambda [c] (= c group.length))))

(defun countWhereYes [:Array<String> group predicate]
    (let [yesDict (new Map<String,Int>)]
        (doFor person group
            (doFor question (person.split "")
                (dictSet yesDict question
                    (+ 1
                        (if (yesDict.exists question) (dictGet yesDict question) 0)))))
        (count yesDict predicate)))