(defun differences [:kiss.List<Int> ratings]
    (for pair (pairs ratings) (- 0 (apply - pair))))

(defun distribution [:kiss.List<Int> numbers]
    (let [:Map<Int,Int> dist (new Map)]
        (doFor num numbers
            (dictSet dist num
                (if (dist.exists num)
                        (+ 1 (dictGet dist num))
                    1)))
        dist))