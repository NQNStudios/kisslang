(var quotesAndThings [
    "\""
    "'"
    "`"
    "["
    "]"
    "("
    ")"    
])

(var punctuation [
    ","
    "."
    ";"
    ":"
    "-"
    "!"
    "?"
    "'s" // possessive
])

(var delimiters [
    " "
    "\n"
    "--"
    "/"
])

(function :Array<String> splitByAll [:String text :Array<String> delims]
    (ifLet [delims (delims.copy)]
           (let [next (delims.shift)
                    tokens (text.split next)]
                (flatten (for token tokens (splitByAll token (delims.copy)))))
        [text]))

(function splitTokens [:String text]
    (splitByAll text delimiters))

(function normalize [:String token :Bool toLower]
    (cond
        // Remove quotes and things around
        ((apply or (for quote quotesAndThings (token.startsWith quote)))
            (normalize (token.substr 1) toLower))
        ((apply or (for quote quotesAndThings (token.endsWith quote)))
            (normalize (substr token 0 -1) toLower))
        // Remove punctuation after
        ((apply or (for punct punctuation (token.endsWith punct)))
            (normalize (substr token 0 -1) toLower))
        // Lower-case
        (toLower (token.toLowerCase))
        (true token)))